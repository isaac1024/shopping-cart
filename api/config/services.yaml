# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    _instanceof:
        ShoppingCart\Shared\Domain\Bus\CommandHandler:
            tags:
                - { name: messenger.message_handler, bus: command.bus, from_transport: command, method: dispatch }

        ShoppingCart\Shared\Domain\Bus\QueryHandler:
            tags:
                - { name: messenger.message_handler, bus: query.bus, from_transport: query, method: ask }

        ShoppingCart\Shared\Domain\Bus\EventSubscriber:
            tags:
                - { name: messenger.message_handler, bus: event.bus, from_transport: event, method: dispatch }
                - { name: shop.event_subscriber }

        ShoppingCart\Shared\Infrastructure\ApiController:
            tags: [ 'controller.service_arguments' ]

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/Symfony'
        exclude:
            - '../src/Symfony/Kernel.php'

    ShoppingCart\:
        resource: '../src/ShoppingCart'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\RequestValueResolver:
        tags:
            - { name: controller.argument_value_resolver, priority: 50 }

    App\Service\EventMapper:
        arguments: [ !tagged_iterator shop.event_subscriber ]

    App\Service\ApiExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    App\Service\AmqpRetryListener:
        arguments:
            $retryTransport: '@messenger.transport.event_retry'
            $failedTransport: '@messenger.transport.event_failed'

    ShoppingCart\Shared\Infrastructure\Bus\SymfonyEventBus:
        arguments:
            $transport: '@messenger.transport.event'

    ShoppingCart\Query\Payment\Infrastructure\Repository\StripePaymentSecretRepository:
        arguments:
            $stripeSecretKey: 'secret-key'